{% paginate collection.products by 12 %}


{% if collection.metafields.my_fields.top_banner  %}
<div class="collection-banner">
  <div class="row">
    <img src="{{ collection.metafields.my_fields.top_banner | img_url:'master' }}">
  </div><!-- row -->
</div><!-- container -->
{% endif %}

<header class="page-header">
  {% if collection.image %}
  <img class="image lazyload collection_banner_cover" src="{{ collection.image | img_url:"master" }}">
  {% endif %}
  <div class="container">
    <div class="row align-items-center">
      <div class="col-12 text-center">
        <h1 class="mt-2 mt-md-0 mb-4 mb-md-2">{{ collection.title }}</h1>
      </div>
    </div><!-- row -->
    {% if collection.description != blank %}
    <div class="row mb-4 mb-md-2">
      <div class="col-12 col-lg-7 mx-auto text-center">
        <div class="rte">
          {{collection.description}}
        </div>
      </div>
    </div><!-- row -->
    {% endif %}
  </div>
</header>

<div class="collection-description d-none">
  <div class="container">
    <div class="row">
      <div class="col-12 col-md-8 col-lg-6 mx-auto">
        {% if collection.description != blank %}
        <div class="rte text-center pt-3 mb-2">
          {{ collection.description }}
        </div>
        {% endif %}
      </div><!-- col -->
    </div><!-- row -->
    <div class="row">
      <div class="col mt-lg-0 text-center">
        <span class="collection-read-more">Read More</span>
      </div>
    </div>
  </div><!-- container -->
</div>

<div class="collection-listing test">
  <div class="container-fluid test">

    <div class="row">

      <!--       <div class="container-fluid py-3 py-md-2 test">
<div class="row"> -->
      <div class="col-4">{% include 'breadcrumbs' %}</div>
      <!--         </div><!-- row  -->
      <!--       </div><!-- container  -->


      <div class="col-8 main_sorting_block">
        <div class="offset-md-9">
          <div id="bc-sf-filter-top-sorting"></div>
        </div><!-- col -->
        <div class="col-2 d-sm-none">
          <ul class="collection-view d-flex">
            <li class="collection-view-six active">
              <span class="d-sm-block d-md-none">
                {% include '2x2' %}
              </span>
              <span class="d-none d-md-block">
                {% include 'icon-collection-view-4' %}
              </span>
            </li>
            <li class="collection-view-three">
              <span class="d-sm-block d-md-none">
                {% include '1x1' %}
              </span>
              <span class="d-none d-md-block">
                {% include 'icon-collection-view-3' %}
              </span>
            </li>
          </ul>
        </div>
      </div><!-- col -->
      <div class="col-md-3 col-sm-12 col-xs-12">
        {% include 'collection-sidebar' %}
      </div><!-- col -->

      <div class="col-md-9 col-sm-12 col-xs-12">
        <div class="row">
          <div class="col">
            <div id="bc-sf-filter-products" class="row collection-view-six">
              {% for product in collection.products %}

              {% include 'collection-product'%}
              {% else %}
              <p>{{ 'collections.general.no_matches' | t }}</p>
              {% endfor %}
            </div><!-- row -->
          </div><!-- col -->
        </div><!-- row -->
      </div><!-- col -->
    </div><!-- row -->

    {% include 'collection-bottom-pagination' %}
  </div><!-- cotainer-fluid -->

  {% include 'collection-quick-view' %}

</div><!-- Collection Listing -->

{% include 'product-recently-viewed', recentlyViewedTitle: 'Recently Viewed' %}

{% endpaginate %}

{% comment %} 
BG: the below is used in conjunction with jQuery to create the colour swatches on the collection pages. We cycle through all products within the collection, and then use jQuery to map the products to their colour variations.
{% endcomment %}

{% comment %} <div class="collection-product-colours d-none">
<ul>
  {% paginate collection.products by 400 %}
  {% for product in collection.products %}
  <li data-product-id="{{product.id}}" data-product-group="{{product.title | split: 'C' | first | strip}}" data-product-image-large="{{ product.featured_image | img_url: '600x' }}" data-product-image-secondary="{{ product.images[1].src | img_url: '600x' }}" {% for tag in product.tags%}{% if tag contains 'frame_colour_' %}data-product-colour="{{tag | remove: 'frame_colour_' | remove: ' ' | remove: '|' | downcase }}"{% endif %}{%endfor%} data-product-url="{{shop.url}}{{collection.url}}{{product.url}}">
    <a href="{{shop.url}}{{collection.url}}{{product.url}}">{{product.title}}</a>
  </li>
  {% endfor %}
  {% endpaginate %}
</ul>
</div><!-- collection-product-collours --> {% endcomment %}

<style>
  img.image.collection_banner_cover {
    object-fit: cover;
    height: 300px;
    width: 100%;
    object-position: top;
    margin-bottom: 50px;
  }
  .main_sorting_block {
    margin-bottom: 20px;
  }
  .filter-sidebar #bc-sf-filter-tree .bc-sf-filter-option-block{
    width:100%
  }
</style>
<script>
  // Declare bcSfFilterConfig variable
  var bcSfFilterConfig = {
    label: {
      refine: "{{ 'product_filter_search.refine' | t }}",
      refine_mobile: "{{ 'product_filter_search.refine_mobile' | t }}",
      clear: "{{ 'product_filter_search.clear' | t }}",
      clear_all: "{{ 'product_filter_search.clear_all' | t }}",
      apply: "{{ 'product_filter_search.apply' | t }}",
      sale: "{{ 'products.product.on_sale' | t }}",
      sold_out: "{{ 'products.product.sold_out' | t }}",
      breadcrumb_home: {% if product_filter_search.breadcrumb_home != blank %} {{ 'product_filter_search.breadcrumb_home' | t }}" {% else %} "Home" {% endif %},
      load_more: {% assign temp = 'product_filter_search.load_more' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Load more Products" {% endunless %},
      show_limit: {% assign temp = 'product_filter_search.show_limit' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Show" {% endunless %},
      sorting: {% assign temp = 'collections.sorting.title' | t  %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Sorting" {% endunless %},
      sorting_best_selling: {% assign temp = 'collections.sorting.best_selling' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Best Selling" {% endunless %},
      sorting_featured: {% assign temp = 'collections.sorting.featured' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Featured" {% endunless %},
      sorting_title_ascending: {% assign temp = 'collections.sorting.az' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Alphabetically, A-Z" {% endunless %},
      sorting_title_descending: {% assign temp = 'collections.sorting.za' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Alphabetically, Z-A" {% endunless %},
      sorting_price_ascending: {% assign temp = 'collections.sorting.price_ascending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Lowest Price" {% endunless %},
      sorting_price_descending: {% assign temp = 'collections.sorting.price_descending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Highest Price" {% endunless %},
      sorting_date_ascending: {% assign temp = 'collections.sorting.date_ascending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Date, Old to New" {% endunless %},
      sorting_date_descending: {% assign temp = 'collections.sorting.date_descending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Date, New to Old" {% endunless %},
      sorting_sale_descending: {% assign temp = 'collections.sorting.sale_descending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "% Off" {% endunless %},
      sorting_relevance: {% assign temp = 'collections.sorting.relevance' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Relevance" {% endunless %},
      search_general_title: {% assign temp = 'product_filter_search.search_general_title' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} 'Search' {% endunless %},
      search_result_header: {% assign temp = 'product_filter_search.search_result_header' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} {% raw %}'Search Results for "{{ terms }}"'{% endraw %} {% endunless %},
      search_result_empty: {% assign temp = 'product_filter_search.search_result_empty' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} {% raw %}'Your search for "{{ terms }}"" didn\'t match any results'{% endraw %} {% endunless %},
      search_result_number: {% assign temp = 'product_filter_search.search_result_number' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} {% raw %}'Showing {{ count }} results for "{{ terms }}"'{% endraw %} {% endunless %},
    },
    custom: {
    }
  };
</script>

{% schema %}
{
"name": "Collection",
"settings": [
{
"type": 		"header",
"content": 		"Image Ratio"
},
{
"type": 	"paragraph",
"content": 	"Determine where the content should be positioned both vertical and horizontal."
},
{
"type":         "select",
"id":           "ratio",
"label":        "Fixed Ratio?",
"options": [
{
"value": "fixed-ratio square-crop",
"label": "Square (4x4 Cropped)"
},
{
"value": "fixed-ratio square",
"label": "Square (4x4)"
},
{
"value": "fixed-ratio portrait-crop",
"label": "Portrait (4x5 Cropped)"
},
{
"value": "fixed-ratio portrait",
"label": "Portrait (4x5)"
},
{
"value": "",
"label": "No Set Ratio"
}
],
"default":   "fixed-ratio square"
},
{
"type": 	"header",
"content": 	"Recently Viewed Options"
},
{
"type":         "select",
"id":           "recently_viewed_ratio",
"label":        "Recently Viewed - Fixed Ratio?",
"options": [
{
"value": "fixed-ratio square-crop",
"label": "Square (4x4 Cropped)"
},
{
"value": "fixed-ratio square",
"label": "Square (4x4)"
},
{
"value": "fixed-ratio portrait-crop",
"label": "Portrait (4x5 Cropped)"
},
{
"value": "fixed-ratio portrait",
"label": "Portrait (4x5)"
},
{
"value": "",
"label": "No Set Ratio"
}
],
"default":   "fixed-ratio portrait"
}
]
}
{% endschema %}

<style>
  .variant_option .btn-tertiary:before {
    background: transparent !important;
  }
  .variant_option button.btn-add-to-cart.btn.btn-tertiary.variant-available {
    border: 0px solid #000;
    border-radius: 2px;
    background: transparent;
    width: auto;
    color: #000 !important;
    padding: 0;
    height: auto;
  }
  .variant_option {
    display: none;
    justify-content: center;
    position: relative;
  }
  .btn-add-to-cart.variant-available.btn-adding {
    background-color: transparent !important;
  }
  .variant_option button.btn-add-to-cart.btn.btn-tertiary.variant-available:hover {
    border-bottom: 1px solid #000;
  }
  .ajaxified-cart-feedback.error, .ajaxfeedback.error {
    background-color: #f8d7da;
    color: #721c24;
    border-left: 3px solid #721c24;
    position: absolute;
    width: 100%;
    left: 0;
    right: 0;
    margin-top: 0;
    font-size: 10px;
  }
  div#product_single:hover .variant_option {
    display: flex;    
  }
  .variant_option form {
    width: 35px;
  }  
  .collection-listing .product-single:hover .product-title,.collection-listing .product-single:hover .product-price{
    display: none;
  }
  
@media only screen and (max-width: 767px) {
  
   .collection-listing .product-single:hover .product-title, .collection-listing .product-single:hover .product-price {
    display: block;
}
  
  
}  
 
</style>